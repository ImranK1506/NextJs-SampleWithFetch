{"ast":null,"code":"var _jsxFileName = \"/Users/imran/Documents/Courses/udemy/the-complete-junior-to-senior-web-developer-roadmap/spa & ssr/next-ssr-robots/pages/robots.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\nimport Layout from \"../shared/layout\";\n\nconst Robots = props => {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Robots\"), __jsx(Link, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Home\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, props.robots.map(robot => __jsx(\"li\", {\n    key: robot.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: `robot/${robot.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, robot.name)))));\n};\n\nRobots.getInitialProps = async function () {\n  const response = await fetch('https://jsonplaceholder.typicode.com/users');\n  const data = await response.json();\n  return {\n    robots: data\n  };\n};\n\nexport default Robots;","map":{"version":3,"sources":["/Users/imran/Documents/Courses/udemy/the-complete-junior-to-senior-web-developer-roadmap/spa & ssr/next-ssr-robots/pages/robots.js"],"names":["Link","fetch","Layout","Robots","props","robots","map","robot","id","name","getInitialProps","response","data","json"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACvB,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,EAEG,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,CAFH,EAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEMA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBC,KAAK,IACpB;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,SAAQD,KAAK,CAACC,EAAG,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACID,KAAK,CAACE,IADV,CADH,CADF,CAFN,CALH,CADJ;AAoBF,CArBD;;AAuBAN,MAAM,CAACO,eAAP,GAAyB,kBAAkB;AACxC,QAAMC,QAAQ,GAAG,MAAMV,KAAK,CAAC,4CAAD,CAA5B;AACA,QAAMW,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;AACA,SAAO;AACJR,IAAAA,MAAM,EAAEO;AADJ,GAAP;AAGF,CAND;;AAQA,eAAeT,MAAf","sourcesContent":["import Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\nimport Layout from \"../shared/layout\";\n\nconst Robots = (props) => {\n   return (\n       <Layout>\n          <h1>Robots</h1>\n          <Link href='/'>\n             <button>Home</button>\n          </Link>\n          <div>\n             {\n                props.robots.map(robot => (\n                  <li key={robot.id}>\n                     <Link href={`robot/${robot.id}`}>\n                        {robot.name}\n                     </Link>\n                  </li>\n                 )\n               )\n             }\n          </div>\n       </Layout>\n   )\n};\n\nRobots.getInitialProps = async function () {\n   const response = await fetch('https://jsonplaceholder.typicode.com/users');\n   const data = await response.json();\n   return {\n      robots: data\n   }\n};\n\nexport default Robots;"]},"metadata":{},"sourceType":"module"}