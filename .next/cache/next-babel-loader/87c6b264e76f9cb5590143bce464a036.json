{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/imran/Documents/Courses/udemy/the-complete-junior-to-senior-web-developer-roadmap/spa & ssr/next-ssr-robots/pages/robots.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\nimport Layout from \"../shared/layout\";\n\nvar Robots = function Robots(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Robots\"), __jsx(Link, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Home\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, props.robots.map(function (robot) {\n    return __jsx(\"li\", {\n      key: robot.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"robots/\".concat(robot.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, robot.name)));\n  })));\n};\n\nRobots.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var response, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://jsonplaceholder.typicode.com/users');\n\n        case 2:\n          response = _context.sent;\n          _context.next = 5;\n          return response.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(data);\n          return _context.abrupt(\"return\", {\n            robots: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Robots;","map":{"version":3,"sources":["/Users/imran/Documents/Courses/udemy/the-complete-junior-to-senior-web-developer-roadmap/spa & ssr/next-ssr-robots/pages/robots.js"],"names":["Link","fetch","Layout","Robots","props","robots","map","robot","id","name","getInitialProps","response","json","data","console","log"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACvB,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,EAEG,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,CAFH,EAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEMA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,UAAAC,KAAK;AAAA,WACpB;AAAI,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,MAAC,IAAD;AAAM,MAAA,IAAI,mBAAYD,KAAK,CAACC,EAAlB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,KAAK,CAACE,IAAV,CADH,CADH,CADoB;AAAA,GAAtB,CAFN,CALH,CADJ;AAoBF,CArBD;;AAuBAN,MAAM,CAACO,eAAP;AAAA;AAAA;AAAA;AAAA,yBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACCT,KAAK,CAAC,4CAAD,CADN;;AAAA;AAChBU,UAAAA,QADgB;AAAA;AAAA,iBAEHA,QAAQ,CAACC,IAAT,EAFG;;AAAA;AAEhBC,UAAAA,IAFgB;AAGtBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAHsB,2CAIf;AACJR,YAAAA,MAAM,EAAEQ;AADJ,WAJe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;AASA,eAAeV,MAAf","sourcesContent":["import Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\nimport Layout from \"../shared/layout\";\n\nconst Robots = (props) => {\n   return (\n       <Layout>\n          <h1>Robots</h1>\n          <Link href='/'>\n             <button>Home</button>\n          </Link>\n          <div>\n             {\n                props.robots.map(robot => (\n                  <li key={robot.id}>\n                     <Link href={`robots/${robot.id}`}>\n                        <a>{robot.name}</a>\n                     </Link>\n                  </li>\n                 )\n               )\n             }\n          </div>\n       </Layout>\n   )\n};\n\nRobots.getInitialProps = async function () {\n   const response = await fetch('https://jsonplaceholder.typicode.com/users');\n   const data = await response.json();\n   console.log(data);\n   return {\n      robots: data\n   }\n};\n\nexport default Robots;"]},"metadata":{},"sourceType":"module"}